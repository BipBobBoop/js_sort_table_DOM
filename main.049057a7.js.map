{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","comparable","el","index","isNumeric","value","cells","textContent","replace","sortColumn","rows","querySelectorAll","isNaN","sort","a","b","aValue","bValue","localeCompare","forEach","row","append","th","addEventListener"],"mappings":";AAAA,aA8BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BD,IAAMA,EAAQC,SAASC,cAAc,SAQrC,SAASC,EAAWC,EAAIC,EAAOC,GACvBC,IAAAA,EAAQH,EAAGI,MAAMH,GAAOI,YAAYC,QAAQ,QAAS,IAEpDJ,OAAAA,GAAaC,EAAQA,EAG9B,SAASI,EAAWN,GACZO,IAAAA,EAAWZ,EAAAA,EAAMa,iBAAiB,aAClCP,GAAaQ,MAAMX,EAAWS,EAAK,GAAIP,GAAO,IAEpDO,EAAKG,KAAK,SAACC,EAAGC,GACNC,IAAAA,EAASf,EAAWa,EAAGX,EAAOC,GAC9Ba,EAAShB,EAAWc,EAAGZ,EAAOC,GAE7BA,OAAAA,EAAYY,EAASC,EAASD,EAAOE,cAAcD,KAG5DP,EAAKS,QAAQ,SAAAC,GACXtB,EAAME,cAAc,SAASqB,OAAOD,KAxBxCtB,EAAMa,iBAAiB,YAAYQ,QAAQ,SAACG,EAAInB,GAC9CmB,EAAGC,iBAAiB,QAAS,WAC3Bd,EAAWN","file":"main.049057a7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.querySelectorAll('thead th').forEach((th, index) => {\n  th.addEventListener('click', () => {\n    sortColumn(index);\n  });\n});\n\nfunction comparable(el, index, isNumeric) {\n  const value = el.cells[index].textContent.replace(/[$,]/g, '');\n\n  return isNumeric ? +value : value;\n}\n\nfunction sortColumn(index) {\n  const rows = [...table.querySelectorAll('tbody tr')];\n  const isNumeric = !isNaN(comparable(rows[0], index, true));\n\n  rows.sort((a, b) => {\n    const aValue = comparable(a, index, isNumeric);\n    const bValue = comparable(b, index, isNumeric);\n\n    return isNumeric ? aValue - bValue : aValue.localeCompare(bValue);\n  });\n\n  rows.forEach(row => {\n    table.querySelector('tbody').append(row);\n  });\n}\n"]}